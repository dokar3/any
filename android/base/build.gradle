plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.compose.compiler)
}

android {
    namespace 'any.base'
    compileSdk libs.versions.compileSdk.get().toInteger()

    defaultConfig {
        minSdk 21
        targetSdk libs.versions.targetSdk.get().toInteger()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
}

dependencies {
    api platform(libs.compose.bom)

    api libs.compose.ui.ui
    api libs.compose.ui.util
    api libs.compose.animation
    api libs.compose.foundation
    api libs.compose.material

    implementation libs.okhttp
    implementation libs.androidx.browser
    implementation libs.androidx.documentfile
    api libs.androidx.activity.compose
    implementation libs.kotlinx.coroutines.android

    implementation libs.disklrucache

    implementation libs.fresco.asProvider()
    implementation libs.fresco.animated.base
    implementation libs.fresco.gif
    implementation libs.fresco.middleware
    implementation libs.fresco.imagepipeline.okhttp

    testImplementation libs.junit
    testImplementation libs.kotlinx.coroutines.test
    androidTestImplementation libs.androidx.test.junit
    androidTestImplementation libs.androidx.test.espresso
}