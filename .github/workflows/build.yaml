name: Build

on:
  workflow_call:
    inputs:
      runner_os:
        required: true
        type: string
      check:
        required: true
        type: boolean
      build_release_apks:
        required: false
        type: boolean
        default: false
      create_release_from_tag:
        required: false
        type: boolean
        default: false
    secrets:
      keystore_base64:
        required: true
      keystore_password:
        required: true
      keystore_key_password:
        required: true
      twitter_client_id:
        required: false
      unsplash_access_key:
        required: false

jobs:
  build:
    runs-on: ${{ inputs.runner_os }}
    env:
      KEYSTORE_PATH: ./release.jks
    steps:
      - uses: actions/checkout@v4

      - name: Set up node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Upgrade yarn
        run: |
          corepack enable
          corepack prepare yarn@stable --activate
          echo "yarn version: $(yarn -v)"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get globalFolder)/cache" >> $GITHUB_OUTPUT
        shell: bash

      - name: Restore yarn cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-cache-folder-${{ hashFiles('js/**/yarn.lock', 'js/**/.yarnrc.yml') }}
          restore-keys: |
            yarn-cache-folder-

      - name: Setup yarn and js projects
        run: |
          node ./scripts/service/setup.js
          echo "yarn version: $(yarn -v)"
        shell: bash

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run tests
        if: ${{ inputs.check }}
        run: ./gradlew check

      - name: Decode keystore
        if: ${{ inputs.build_release_apks }}
        env:
          ENCODED_KEYSTORE: ${{ secrets.keystore_base64 }}
        run: |
          if [ -z "$ENCODED_KEYSTORE" ]; then
            echo "secret 'keystore_base64' is not set"
            exit 1
          fi
          node ./scripts/fileBase64Converter.js str2f $ENCODED_KEYSTORE $KEYSTORE_PATH

      # https://github.blog/changelog/2023-02-23-hardware-accelerated-android-virtualization-on-actions-windows-and-linux-larger-hosted-runners/
      - name: Enable KVM group perms
        if: ${{ inputs.runner_os == 'ubuntu-latest' }}
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Generate baseline profile
        if: ${{ inputs.build_release_apks }}
        env:
          KEYSTORE_PASSWORD: ${{ secrets.keystore_password }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.keystore_key_password }}
          TWITTER_CLIENT_ID: ${{ secrets.twitter_client_id }}
          UNSPLASH_ACCESS_KEY: ${{ secrets.unsplash_access_key }}
        run: chmod +x ./scripts/gen-baseline-profile.sh && ./scripts/gen-baseline-profile.sh

      - name: Build release APKs
        if: ${{ inputs.build_release_apks }}
        env:
          KEYSTORE_PASSWORD: ${{ secrets.keystore_password }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.keystore_key_password }}
          TWITTER_CLIENT_ID: ${{ secrets.twitter_client_id }}
          UNSPLASH_ACCESS_KEY: ${{ secrets.unsplash_access_key }}
        run: ./gradlew app:assembleRelease

      - name: Cleanup keystore
        if: always()
        run: |
          if [ -e "$KEYSTORE_PATH" ]; then
            rm -f $KEYSTORE_PATH
          fi

      - name: Create release from tag
        uses: softprops/action-gh-release@v1
        if: ${{ (inputs.create_release_from_tag) && startsWith(github.ref, 'refs/tags/v') }}
        with:
          generate_release_notes: true
          files: |
            android/app/build/outputs/apk/release/app-arm64-v8a-release.apk
            android/app/build/outputs/apk/release/app-x86_64-release.apk
            android/app/build/outputs/apk/release/app-universal-release.apk

      - name: Upload APKs
        if: ${{ inputs.build_release_apks }}
        uses: actions/upload-artifact@v4
        with:
          name: "app-release-apks"
          path: android/app/build/outputs/apk/release/*.apk
